###############################
# Skip things already in .NET #
###############################

# charsets
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'ASCII_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'ascii_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'Ascii')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'Unicode')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'unicode_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'unichar_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'UNICHAR_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'ucs4_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'utf8_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'utf16_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'base64_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'locale_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'convert')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='ConvertError']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='IConv']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='iconv']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'filename_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[contains(@name,'charset')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[contains(@name,'codeset')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='NormalizeMode']"
# collections
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name='Bytes']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*/gi:*[./gi:parameters/gi:parameter/gi:type/@name ='Bytes']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*/gi:*[./gi:return-value/gi:type/@name ='Bytes']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name='Data']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name='DataForeachFunc']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name='Node']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name='NodeForeachFunc']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name='NodeTraverseFunc']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name='Queue']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name='Sequence']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name='SequenceIter']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name='SequenceIterCompareFunc']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name='TraverseFlags']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name='TraverseFunc']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name='TraverseType']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name='Tree']"
# crypto
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='Hmac']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='Rand']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'random_')]"
# date/time
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'DATE_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'Date')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'TIME_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='Time']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='TimeSpan']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='TimeVal']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*/gi:*[./gi:parameters/gi:parameter/gi:type/@name ='TimeVal']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='TimeZone']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='TimeType']"
# environment
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='listenv']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='MODULE_SUFFIX']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[contains(@name,'getenv')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[contains(@name,'setenv')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='UserDirectory']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[contains(@name,'ENDIAN')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'hostname_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'WIN32_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'SEARCHPATH_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'SIZEOF_')]"
# io
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'File')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'file_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'Dir')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'DIR_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'Mapped')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'Stat')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'IO')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'io_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='access']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='chdir']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='close']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'mk')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='rmdir']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='unlink']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:callback[@name='UnixFDSourceFunc']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:record[@name='Source']/gi:method[@name='add_unix_fd']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:record[@name='Source']/gi:method[@name='modify_unix_fd']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:record[@name='Source']/gi:method[@name='query_unix_fd']"
# math
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'MININT')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'MAXINT')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'MAXUINT')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'LN')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'LOG_2_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'PI')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name='E']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name='SQRT2']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[contains(@name,'IEEE754')]"
# memory
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='free']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'malloc')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'mem_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='memdup']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'Mem')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'realloc')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'slice')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'Slice')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'try_')]"
# print
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[contains(@name,'print')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[contains(@name,'_FORMAT')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[contains(@name,'_MODIFIER')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='warn_message']"
# process
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='Pid']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'spawn_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'Spawn')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:callback[@name='ChildWatchFunc']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:function[starts-with(@name,'child_watch_')]"
#regex
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'Regex')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'Match')]"
# string
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'String')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'str')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'string_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'STR_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='stpcpy']"
# test
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'assertion_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'test_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'Test')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='assert_warning']"
# thread
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'thread_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'Thread')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[contains(@name,'Mutex')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'Once')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'pointer_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='Cond']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='Private']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='RWLock']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='AsyncQueue']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:record[@name ='MainContext']/gi:method[@name='wait']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='usleep']"
# timer
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='Timer']"
# uri
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'uri_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'URI_')]"
# xml
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'markup_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'Markup')]"

############################################
# Other things that probably aren't needed #
############################################

chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name='ANALYZER_ANALYZING']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'HAVE_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[contains(@name,'INLINE')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'GNUC_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'atomic_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'return_if_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'on_error_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'Print')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'Checksum')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'compute_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[contains(@name,'_application_name')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[contains(@name,'_prgname')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'get_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name='reload_user_special_dirs_cache']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name='basename']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'path_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'build_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'format_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name='find_program_in_path']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'bit_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name='spaced_primes_closest']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='atexit']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='parse_debug_string']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='qsort_with_data']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='clear_pointer']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='nullify_pointer']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='FormatSizeFlags']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='DebugKey']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='DuplicateFunc']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='FreeFunc']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='TranslateFunc']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='VoidFunc']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'Scanner')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'Token')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name='ErrorType']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'CSET_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'Shell')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'shell_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'Option')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'option_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'OPTION_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'Pattern')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'pattern_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'Bookmark')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'datalist_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'DATALIST_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'dataset_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'SYSDEF_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='SourcePrivate']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[contains(@name,'gettext')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'unix_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'Hook')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'HOOK_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'TrashStack')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='USEC_PER_SEC']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[@name ='VA_COPY_AS_ARRAY']"

####################################################
# Skip things that are implemented in GISharp.Core #
####################################################

# ByteArray
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:record[@name='ByteArray']"
# Array
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:record[@name='Array']"
# PtrArray
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:record[@name='PtrArray']"
# DestroyNotify
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:callback[@name='DestroyNotify']"
# Error
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:record[@name='Error']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:function[starts-with(@name, 'set_error')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:function[starts-with(@name, 'clear_error')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:function[starts-with(@name, 'prefix_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:function[starts-with(@name, 'propagate_')]"
# HashTable
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:record[@name='HashTable']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:callback[@name='HashFunc']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:callback[@name='EqualFunc']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:callback[@name='HFunc']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:callback[@name='HRFunc']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:function[@name='direct_equal']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:function[@name='direct_hash']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:function[@name='double_hash']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:function[@name='double_equal']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:function[@name='double_hash']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:function[@name='int_equal']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:function[@name='int_hash']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:function[@name='int64_equal']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:function[@name='int64_hash']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:record[@name='HashTableIter']"
# Log
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:constant[starts-with(@name,'LOG_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:function[starts-with(@name,'log')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:*[starts-with(@name,'Log')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:bitfield[starts-with(@name,'Log')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:callback[starts-with(@name,'Log')]"
# List
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:record[@name='List']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:callback[@name='CompareFunc']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:callback[@name='CompareDataFunc']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:callback[@name='Func']"
# MainContext
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:record[@name='MainContext']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:function[@name='main_depth']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:function[@name='poll']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:record[@name='PollFD']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:callback[@name='PollFunc']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:constant[starts-with(@name,'PRIORITY_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:function[starts-with(@name,'idle_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:function[starts-with(@name,'timeout_')]"
# MainLoop
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:record[@name='MainLoop']"
# Node
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:callback[@name='CopyFunc']"
# Quark
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:alias[@name='Quark']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:function[starts-with(@name,'quark_')]"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:function[starts-with(@name,'intern_')]"
# SList
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:record[@name='SList']"
# Source
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:constant[@name='SOURCE_CONTINUE']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:constant[@name='SOURCE_REMOVE']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:record[@name='Source']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:record[@name='SourceFuncs']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:record[@name='SourceCallbackFuncs']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:function[@name='main_current_source']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:callback[@name='SourceFunc']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:callback[@name='SourceDummyMarshal']"
# Strv
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:alias[@name='Strv']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:function[@name='strv_get_type']"
# Type
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:alias[@name='Type']"
# Variant
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:record[@name='Variant']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:function[@name='variant_get_gtype']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:enumeration[@name='VariantClass']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:record[@name='VariantIter']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:record[@name='VariantType']"
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:enumeration[@name='VariantParseError']"

#########################
# Fixup everything else #
#########################

# KeyFile

# Move constants that start with KEY_FILE_ to the KeyFile type
move "gi:repository/gi:namespace/gi:constant[starts-with(@name,'KEY_FILE_')]" "gi:repository/gi:namespace/gi:record[@name='KeyFile']"
# Drop the KEY_FILE_ prefix from the constant names
chattr "name" "KEY_FILE_(.*)" "$1" "gi:repository/gi:namespace/gi:record[@name='KeyFile']/gi:constant[starts-with(@name,'KEY_FILE_')]"
# Hide the free function since this is reference counted
chattr "skip" "" "1" "gi:repository/gi:namespace/gi:record[@name='KeyFile']/gi:method[@name='free']"

# Version

# add a static class for version related stuff
addelement "<gs:static-class name='Version' />" "gi:repository/gi:namespace"
# Move VERSION constants to Version static-class
move "gi:repository/gi:namespace/gi:constant[contains(@name,'VERSION')]" "gi:repository/gi:namespace/gs:static-class[@name='Version']"
# make version constants private
chattr "gs:access-modifiers" "" "private" "gi:repository/gi:namespace/gs:static-class[@name='Version']/gi:constant[contains(@name,'VERSION')]"
# Drop the VERSION prefix or suffix from the constant names
chattr "name" "(.*)_?VERSION_?(.*)" "$1$2" "gi:repository/gi:namespace/gs:static-class[@name='Version']/gi:constant[contains(@name,'VERSION')]"
# Move check_version function to Version static-class
move "gi:repository/gi:namespace/gi:function[@name ='check_version']" "gi:repository/gi:namespace/gs:static-class[@name='Version']"
# Drop the _version suffix from the function names
chattr "name" "(.*)_version" "$1" "gi:repository/gi:namespace/gs:static-class[@name='Version']/gi:function"

// This file was originally generated by the Gtk# (gapi3) code generator.
// It is now maintained by hand.

using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace GISharp.GI
{
    public class VFuncInfo : CallableInfo
    {

        [DllImport ("libgirepository-1.0.dll", CallingConvention = CallingConvention.Cdecl)]
        static extern int g_vfunc_info_get_flags (IntPtr raw);

        public VFuncInfoFlags Flags {
            get {
                int raw_ret = g_vfunc_info_get_flags (Handle);
                var ret = (VFuncInfoFlags)raw_ret;
                return ret;
            }
        }

        [DllImport ("libgirepository-1.0.dll", CallingConvention = CallingConvention.Cdecl)]
        static extern IntPtr g_vfunc_info_get_invoker (IntPtr raw);

        public FunctionInfo Invoker {
            get {
                IntPtr raw_ret = g_vfunc_info_get_invoker (Handle);
                FunctionInfo ret = MarshalPtr<FunctionInfo> (raw_ret);
                return ret;
            }
        }

        [DllImport ("libgirepository-1.0.dll", CallingConvention = CallingConvention.Cdecl)]
        static extern int g_vfunc_info_get_offset (IntPtr raw);

        public int Offset {
            get {
                int raw_ret = g_vfunc_info_get_offset (Handle);
                int ret = raw_ret;
                return ret;
            }
        }

        [DllImport ("libgirepository-1.0.dll", CallingConvention = CallingConvention.Cdecl)]
        static extern IntPtr g_vfunc_info_get_signal (IntPtr raw);

        public SignalInfo Signal {
            get {
                IntPtr raw_ret = g_vfunc_info_get_signal (Handle);
                SignalInfo ret = MarshalPtr<SignalInfo> (raw_ret);
                return ret;
            }
        }

        public VFuncInfo (IntPtr raw) : base (raw)
        {
        }
    }
}

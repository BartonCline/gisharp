// This file was originally generated by the Gtk# (gapi3) code generator.
// It is now maintained by hand.

namespace GI
{

    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Runtime.InteropServices;

#region Autogenerated code
    public partial class SignalInfo : GI.CallableInfo
    {

        [DllImport ("libgirepository-1.0.dll", CallingConvention = CallingConvention.Cdecl)]
        static extern IntPtr g_signal_info_get_class_closure (IntPtr raw);

        public GI.VFuncInfo ClassClosure {
            get {
                IntPtr raw_ret = g_signal_info_get_class_closure (Handle);
                GI.VFuncInfo ret = MarshalPtr<VFuncInfo> (raw_ret);
                return ret;
            }
        }

        [DllImport ("libgirepository-1.0.dll", CallingConvention = CallingConvention.Cdecl)]
        static extern int g_signal_info_get_flags (IntPtr raw);

        public GI.SignalFlags Flags {
            get {
                int raw_ret = g_signal_info_get_flags (Handle);
                GI.SignalFlags ret = (GI.SignalFlags)raw_ret;
                return ret;
            }
        }

        [DllImport ("libgirepository-1.0.dll", CallingConvention = CallingConvention.Cdecl)]
        static extern bool g_signal_info_true_stops_emit (IntPtr raw);

        public bool TrueStopsEmit {
            get {
                bool raw_ret = g_signal_info_true_stops_emit (Handle);
                bool ret = raw_ret;
                return ret;
            }
        }

        public SignalInfo (IntPtr raw) : base (raw)
        {
        }

#endregion
    }
}

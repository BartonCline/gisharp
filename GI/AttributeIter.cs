// This file was originally generated by the Gtk# (gapi3) code generator.
// It is now maintained by hand.

namespace GI
{

    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Runtime.InteropServices;

#region Autogenerated code
    [StructLayout (LayoutKind.Sequential)]
    public partial struct AttributeIter : IEquatable<AttributeIter>
    {

        private IntPtr _data;
        private IntPtr _data2;
        private IntPtr _data3;
        private IntPtr _data4;

        public static GI.AttributeIter Zero = new GI.AttributeIter ();

        public static GI.AttributeIter New (IntPtr raw)
        {
            if (raw == IntPtr.Zero)
                return GI.AttributeIter.Zero;
            return (GI.AttributeIter)Marshal.PtrToStructure (raw, typeof(GI.AttributeIter));
        }

        public bool Equals (AttributeIter other)
        {
            return true && _data.Equals (other._data) && _data2.Equals (other._data2) && _data3.Equals (other._data3) && _data4.Equals (other._data4);
        }

        public override bool Equals (object other)
        {
            return other is AttributeIter && Equals ((AttributeIter)other);
        }

        public override int GetHashCode ()
        {
            return this.GetType ().FullName.GetHashCode () ^ _data.GetHashCode () ^ _data2.GetHashCode () ^ _data3.GetHashCode () ^ _data4.GetHashCode ();
        }

        private static GLib.GType GType {
            get { return GLib.GType.Pointer; }
        }

#endregion
    }
}

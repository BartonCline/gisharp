// This file was originally generated by the Gtk# (gapi3) code generator.
// It is now maintained by hand.

namespace GI
{

    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Runtime.InteropServices;

#region Autogenerated code
    public partial class RegisteredTypeInfo : GI.BaseInfo
    {

        [DllImport ("libgirepository-1.0.dll", CallingConvention = CallingConvention.Cdecl)]
        static extern IntPtr g_registered_type_info_get_g_type (IntPtr raw);

        public GLib.GType GType {
            get {
                IntPtr raw_ret = g_registered_type_info_get_g_type (Handle);
                GLib.GType ret = new GLib.GType (raw_ret);
                return ret;
            }
        }

        [DllImport ("libgirepository-1.0.dll", CallingConvention = CallingConvention.Cdecl)]
        static extern IntPtr g_registered_type_info_get_type_init (IntPtr raw);

        public string TypeInit {
            get {
                IntPtr raw_ret = g_registered_type_info_get_type_init (Handle);
                string ret = MarshalG.Utf8PtrToString (raw_ret);
                return ret;
            }
        }

        [DllImport ("libgirepository-1.0.dll", CallingConvention = CallingConvention.Cdecl)]
        static extern IntPtr g_registered_type_info_get_type_name (IntPtr raw);

        public string TypeName {
            get {
                IntPtr raw_ret = g_registered_type_info_get_type_name (Handle);
                string ret = MarshalG.Utf8PtrToString (raw_ret);
                return ret;
            }
        }

        public RegisteredTypeInfo (IntPtr raw) : base (raw)
        {
        }

#endregion
    }
}
